@using Belletrix.Core;
@using Belletrix.Entity.Model;
@using Belletrix.Entity.ViewModel;

@model IEnumerable<StudyAbroadViewModel>

@{
    bool showStudent = ViewData.ContainsKey("ShowStudent") && (bool)ViewData["ShowStudent"];
}

<table id="studyabroadlist" class="display table-condensed">
    <thead>
        <tr>
            @if (showStudent)
            {
                <th>Student</th>
            }
            <th>Year</th>
            <th>Semester</th>
            <th>Starting</th>
            <th>Ending</th>
            <th>Credit</th>
            <th>Internship</th>
            <th>Country</th>
            <th>Program</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (StudyAbroadViewModel study in Model)
        {
            CountryModel selectedCountry = (ViewBag.Countries as List<CountryModel>).Single(c => c.Id == study.CountryId);

            ProgramModel selectedProgram = (ViewBag.Programs as List<ProgramModel>).FirstOrDefault(p => p.Id == study.ProgramId);
            string programName = string.Empty;

            if (selectedProgram != null)
            {
                programName = selectedProgram.Name;
            }

            string startDateDataOrder = study.StartDate.HasValue ? study.StartDate.Value.ToString("yyyy-MM-dd") : null;
            string endDateDataOrder = study.EndDate.HasValue ? study.EndDate.Value.ToString("yyyy-MM-dd") : null;

            <tr>
                @if (showStudent)
                {
                    <td>
                        <a href="@Url.Action("View", "Student", new { id = study.StudentId })">@study.Student.LastName, @study.Student.FirstName @study.Student.MiddleName</a>
                    </td>
                }
                <td>@study.Year</td>
                <td>@Formatter.StudyAbroadPeriodString(study.Semester)</td>
                <td data-order="@startDateDataOrder">
                    @if (study.StartDate.HasValue)
                    {
                        @study.StartDate.Value.ToShortDateString()
                    }
                </td>
                <td data-order="@endDateDataOrder">
                    @if (study.EndDate.HasValue)
                    {
                        @study.EndDate.Value.ToShortDateString()
                    }
                </td>
                <td>
                    @if (study.CreditBearing)
                    {
                        <i class="glyphicon glyphicon-ok"></i>
                    }
                </td>
                <td>
                    @if (study.Internship)
                    {
                        <i class="glyphicon glyphicon-ok"></i>
                    }
                </td>
                <td>@GeneralLayout.DisplayCountryFlag(selectedCountry)</td>
                <td>@programName</td>
                <td>
                    <div class="btn-group">
                        <a href="@Url.Action("Edit", "StudyAbroad", new { id = study.Id })"
                           class="btn btn-xs btn-info" data-placement="top"
                           title="Edit"><i class="glyphicon glyphicon-pencil"></i></a>

                        <button type="button" class="btn btn-xs btn-danger studyabroad-list-delete"
                                data-studyabroadid="@study.Id">
                            <i class="glyphicon glyphicon-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
