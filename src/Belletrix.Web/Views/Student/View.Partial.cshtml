@using Belletrix.Core;
@using Belletrix.Entity.Model;

@model StudentModel

<div class="row">
    <div class="col-lg-8">
        <div class="panel panel-default">
            <div class="panel-heading">Study Abroad Experiences</div>
            <div class="panel-body">
                @if ((ViewBag.StudyAbroad as IEnumerable<StudyAbroadModel>).Count() > 0)
                {
                    foreach (StudyAbroadModel studyAbroad in ViewBag.StudyAbroad)
                    {
                        ICollection<string> programTypes = null;

                        if (studyAbroad.ProgramTypes != null)
                        {
                            programTypes = new List<string>();

                            foreach (int programType in studyAbroad.ProgramTypes)
                            {
                                programTypes.Add((ViewBag.Programs as IEnumerable<ProgramModel>).Where(p => p.Id == programType).First().Name);
                            }
                        }

                        <div class="row">
                            <div class="col-md-8">
                                <strong class="h4">
                                    @Formatter.StudyAbroadPeriodString(studyAbroad.Semester)
                                    @studyAbroad.Year:
                                    @if (!string.IsNullOrEmpty(studyAbroad.City))
                                    {
                                        @studyAbroad.City@:,
                                    }
                                    @((ViewBag.Countries as List<CountryModel>).Where(c => c.Id == studyAbroad.CountryId).First().Name)
                                </strong>

                                @if (studyAbroad.CreditBearing)
                                {
                                    <span class="label label-success" style="vertical-align: top">Credit</span>
                                }

                                @if (studyAbroad.Internship)
                                {
                                    <span class="label label-info" style="vertical-align: top">Internship</span>
                                }

                                <div>
                                    @if (studyAbroad.StartDate.HasValue)
                                    {
                                        @studyAbroad.StartDate.Value.ToShortDateString()
                                    }
                                    @if (studyAbroad.EndDate.HasValue)
                                    {
                                        <text>&ndash;</text>
                                        @studyAbroad.EndDate.Value.ToShortDateString()
                                    }
                                </div>

                                <div>
                                    @((ViewBag.Programs as IEnumerable<ProgramModel>).Where(p => p.Id == studyAbroad.ProgramId).First().Name)
                                </div>

                                <div>
                                    @if (programTypes != null && programTypes.Count > 0)
                                    {
                                        @string.Join(", ", programTypes)
                                    }
                                </div>
                            </div>
                        </div>
                        <br />
                    }
                }
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">Notes</div>
            <div class="panel-body">
                @foreach (NoteModel note in ViewBag.Notes)
                {
                    <p>
                        @note.Note
                        <br />
                        <small class="text-muted">
                            by
                            @note.CreatedByFirstName @note.CreatedByLastName
                            on
                            @note.EntryDate.ToString("dddd, MMMM d, yyyy \\a\\t h:mm tt")
                        </small>
                    </p>
                }
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="panel panel-default">
            <div class="panel-body">
                <div>
                    @if (Model.Classification.HasValue)
                    {
                        @((ViewBag.Classifications as SelectList).Where(c => c.Value == Model.Classification.Value.ToString()).First().Text)
                        <br />
                    }
                    <strong class="h2">@Model.FirstName @Model.MiddleName @Model.LastName</strong>
                    @if (!string.IsNullOrEmpty(Model.CampusEmail))
                    {
                        <br />
                        <a href="mailto:@Model.CampusEmail">@Model.CampusEmail</a>
                    }
                    @if (!string.IsNullOrEmpty(Model.AlternateEmail))
                    {
                        <br />
                        <a href="mailto:@Model.AlternateEmail">@Model.AlternateEmail</a>
                    }
                </div>

                <br />

                @if (!string.IsNullOrEmpty(Model.StreetAddress))
                {
                    string address = Model.StreetAddress;

                    if (!string.IsNullOrEmpty(Model.StreetAddress2))
                    {
                        address += ", " + Model.StreetAddress2;
                    }

                    address += ", " + Model.City + ", " + Model.State + " " + Model.PostalCode;

                    <address>
                        <a href="https://maps.google.com/maps?q=@Url.Encode(address)" target="_blank">
                            @Model.StreetAddress
                            @if (!string.IsNullOrEmpty(Model.StreetAddress2))
                            {
                                <br />
                                @Model.StreetAddress2
                            }
                            <br />
                            @Model.City, @Model.State @Model.PostalCode
                        </a>
                    </address>
                }

                @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                {
                    <div>
                        <abbr title="Phone">P:</abbr>
                        @if (Request.Browser.CanInitiateVoiceCall)
                        {
                            <a href="tel:@Model.PhoneNumber">@Formatter.PhoneNumber(Model.PhoneNumber)</a>
                        }
                        else
                        {
                            @Formatter.PhoneNumber(Model.PhoneNumber)
                        }
                    </div>
                }
            </div>
            <div class="panel-footer">
                <div class="btn-group">
                    @if (ViewBag.ShowActionButtons == true)
                    {
                        string notes = "Notes";

                        if (Model.NumberOfNotes > 0)
                        {
                            notes = Model.NumberOfNotes.ToString("N0") + " Note";

                            if (Model.NumberOfNotes > 1)
                            {
                                notes += "s";
                            }
                        }

                        <a href="@Url.Action("List", "Note", new { studentId = Model.Id })"
                            class="btn btn-sm btn-default studentlisttooltop studentnote"
                            data-bt-studentname="@Model.FirstName @Model.MiddleName @Model.LastName"
                            title="Notes">
                            <i class="glyphicon glyphicon-book"></i>
                            @notes
                        </a>
                        <a href="@Url.Action("Edit", "Student", new { id = Model.Id })"
                            class="btn btn-sm btn-default studentlisttooltop" data-placement="top"
                            title="Edit">
                            <i class="glyphicon glyphicon-pencil"></i>
                            Edit
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
