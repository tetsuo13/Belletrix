@using Belletrix.Core;
@using Belletrix.Entity.Model;

@model IEnumerable<StudentModel>

@{
    ViewBag.Title = "List";
}

@section FooterScript {
    <script>
        $(function () {
            new Belletrix.Student().initStudentList('#studentlist',
                '#deleteconfirm', '@Url.Action("Delete", "Student")', 'studentid');
        });
    </script>
}

@section Body {
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Students
                <small>@Model.Count().ToString("N0") total</small>
                <small>
                    <span class="pull-right small">
                        <a href="@Url.Action("Add", "Student")"><i class="glyphicon glyphicon-plus-sign"></i> Add Student</a>
                    </span>
                </small>
            </h1>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">Search</div>
                <div class="panel-body">
                    @using (Html.BeginForm("Search", "Student", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            @Html.Label("SelectedMajors", "Majors:", new { @class = "col-md-2 control-label" })
                            <div class="col-md-2">
                                @Html.ListBox("SelectedMajors", new MultiSelectList(ViewBag.AvailableMajors, "Id", "Name"), new { @class = "multiselect", multiple = "multiple" })
                            </div>

                            @Html.Label("SelectedGraduatingYears", "Graduating:", new { @class = "col-md-2 control-label" })
                            <div class="col-md-2">
                                @Html.ListBox("SelectedGraduatingYears", new MultiSelectList(ViewBag.GraduatingYearsAsEnumerable, "Id", "Name"), new { @class = "multiselect", multiple = "multiple" })
                            </div>

                            @Html.Label("SelectedCountries", "Countries Visited:", new { @class = "col-md-2 control-label" })
                            <div class="col-md-2">
                                @Html.DropDownGroupList("SelectedCountries", ViewBag.StudyAbroadPlaces as IEnumerable<GroupedSelectListItem>, new { @class = "multiselect", multiple = "multiple" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-10 col-md-2">
                                <button type="submit" class="btn btn-default">Filter Students</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-lg-12">
            <table id="studentlist" class="display table-condensed">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Cell Phone</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudentModel student in Model)
                    {
                        string noteTooltip = "Add Notes";
                        string noteClass = "btn-info";

                        if (student.NumberOfNotes > 0)
                        {
                            noteTooltip = student.NumberOfNotes.ToString("N0") + " Note";

                            if (student.NumberOfNotes > 1)
                            {
                                noteTooltip += "s";
                            }

                            noteClass = "btn-warning";
                        }

                        <tr>
                            <td>
                                <a href="@Url.Action("View", "Student", new { id = student.Id })">@student.LastName, @student.FirstName @student.MiddleName</a>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(student.CampusEmail))
                                {
                                    <a href="mailto:@student.CampusEmail">@student.CampusEmail</a>
                                }
                            </td>
                            <td>
                                @if (Request.Browser.CanInitiateVoiceCall)
                                {
                                    <a href="tel:@student.PhoneNumber">@(Formatter.PhoneNumber(student.PhoneNumber))</a>
                                }
                                else
                                {
                                    @(Formatter.PhoneNumber(student.PhoneNumber))
                                }
                            </td>
                            <td>
                                <div class="btn-group">
                                    <a href="@Url.Action("List", "Note", new { studentId = student.Id })"
                                        class="btn btn-xs @noteClass studentlisttooltop studentnote"
                                        data-bt-studentname="@student.FirstName @student.MiddleName @student.LastName"
                                        title="@noteTooltip"><i class="glyphicon glyphicon-book"></i></a>

                                    <a href="@Url.Action("Edit", "Student", new { id = student.Id })"
                                        class="btn btn-xs btn-info"
                                        data-placement="top"><i class="glyphicon glyphicon-pencil"></i></a>

                                    @if (ViewBag.CanUserDeleteStudents)
                                    {
                                        <button type="button" class="btn btn-xs btn-danger"
                                            data-toggle="modal" data-target="#deleteconfirm"
                                            data-studentid="@student.Id">
                                            <i class="glyphicon glyphicon-trash"></i>
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (Request.HttpMethod == "POST" && Model.Count() > 0)
    {
        IEnumerable<string> emailableStudents = Model
            .Where(s => !string.IsNullOrEmpty(s.CampusEmail))
            .Select(s => s.FirstName + "%20" + s.LastName + "%20<" + s.CampusEmail + ">");

        if (emailableStudents != null && emailableStudents.Any())
        {
            <a href="mailto:@string.Join(";", emailableStudents)">Send email to student list</a>
        }
    }

    <div class="modal fade" id="deleteconfirm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Confirm Delete</h4>
                </div>
                <div class="modal-body">
                    Really delete student?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
}
