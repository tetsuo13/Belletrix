@using Belletrix.Core;
@using Belletrix.Entity.Enum;
@using Belletrix.Entity.ViewModel;

@model DashboardViewModel

@{
    ViewBag.Title = "Index";
}

@section Body {
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header"></h1>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title"><i class="glyphicon glyphicon-time"></i> Recent Activity</h3>
                </div>
                <div class="panel-body">
                    <div class="list-group">
                        @foreach (EventLogViewModel eventLog in Model.RecentActivity)
                        {
                            string action = string.Empty;
                            string personName = eventLog.Student.FirstName + " " + eventLog.Student.LastName;
                            bool modifiedByRealUser = eventLog.ModifiedById != default(int);
                            string iconClass = string.Empty;
                            string anchorLinkUrl = anchorLinkUrl = Url.Action("View", "Student", new { id = eventLog.Student.Id });

                            switch (eventLog.Type)
                            {
                                case (int)EventLogTypes.AddStudent:
                                    action = "added";
                                    iconClass = modifiedByRealUser ? "glyphicon-plus" : "glyphicon-certificate";
                                    break;

                                case (int)EventLogTypes.EditStudent:
                                    action = "modified";
                                    iconClass = "glyphicon-edit";
                                    break;

                                case (int)EventLogTypes.AddStudentExperience:
                                    action = "created experience for";
                                    iconClass = "glyphicon-plane";
                                    break;

                                case (int)EventLogTypes.AddStudentNote:
                                    action = "commented on";
                                    iconClass = "glyphicon-comment";
                                    break;
                            }

                            if (string.IsNullOrEmpty(action))
                            {
                                anchorLinkUrl = "#";
                            }

                            string eventBy = !modifiedByRealUser ? "System" : eventLog.ModifiedByFirstName;

                            <a href="@anchorLinkUrl" class="list-group-item" title="@eventBy @action @personName">
                                <i class="glyphicon @iconClass"></i> @personName
                                <span class="badge" title="@eventLog.EventDate.ToString("dddd, MMMM d, yyyy \\a\\t h:mm tt")">
                                    @eventLog.RelativeDate
                                </span>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6"></div>
    </div>
}
