@using Belletrix.Core;
@using Belletrix.Entity.Enum;
@using Belletrix.Entity.Model;
@using System.Linq;

@model IList<StudyAbroadModel>

@{
    ViewBag.Title = "List";
}

@section FooterScript {
    <script>
        $(function () {
            'use strict';

            $('#experiencelist').dataTable();
        });
    </script>
}

@section Body {
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Students Abroad
                <small>@Model.Count.ToString("N0") total</small>
            </h1>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <table id="experiencelist" class="table table-bordered table-hover table-striped tablesorter table-condensed">
                <thead>
                    <tr>
                        <th>Student</th>
                        <th>Year</th>
                        <th>Semester</th>
                        <th>Starting</th>
                        <th>Ending</th>
                        <th>Credit</th>
                        <th>Internship</th>
                        <th>Country</th>
                        <th>City</th>
                        <th>Program</th>
                        <th>Types</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (StudyAbroadModel study in Model)
                    {
                        CountryModel selectedCountry = (ViewBag.Countries as List<CountryModel>).FirstOrDefault(c => c.Id == study.CountryId);
                        string countryName = String.Empty;

                        if (selectedCountry != null)
                        {
                            countryName = selectedCountry.Name;
                        }

                        ProgramModel selectedProgram = (ViewBag.Programs as List<ProgramModel>).FirstOrDefault(p => p.Id == study.ProgramId);
                        string programName = String.Empty;

                        if (selectedProgram != null)
                        {
                            programName = selectedProgram.Name;
                        }

                        ICollection<string> programTypes = null;

                        if (study.ProgramTypes != null)
                        {
                            programTypes = new List<string>();

                            foreach (int type in study.ProgramTypes)
                            {
                                ProgramTypeModel programType = (ViewBag.ProgramTypes as List<ProgramTypeModel>).FirstOrDefault(p => p.Id == type);

                                if (programType != null)
                                {
                                    programTypes.Add(programType.Name);
                                }
                            }
                        }

                        <tr>
                            <td>
                                <a href="@Url.Action("View", "Student", new { id = study.StudentId })">@study.Student.LastName, @study.Student.FirstName @study.Student.MiddleName</a>
                            </td>
                            <td>@study.Year</td>
                            <td>@Formatter.StudyAbroadPeriodString(study.Semester)</td>
                            <td>
                                @if (study.StartDate != null)
                                {
                                    @DateTimeFilter.UtcToLocal(study.StartDate.Value).ToShortDateString()
                                }
                            </td>
                            <td>
                                @if (study.EndDate != null)
                                {
                                    @DateTimeFilter.UtcToLocal(study.EndDate.Value).ToShortDateString()
                                }
                            </td>
                            <td>
                                @if (study.CreditBearing)
                                {
                                    <i class="glyphicon glyphicon-ok"></i>
                                }
                            </td>
                            <td>
                                @if (study.Internship)
                                {
                                    <i class="glyphicon glyphicon-ok"></i>
                                }
                            </td>
                            <td>@countryName</td>
                            <td>
                                @if (!String.IsNullOrEmpty(study.City))
                                {
                                    @study.City
                                }
                            </td>
                            <td>@programName</td>
                            <td>
                                @if (programTypes != null && programTypes.Count > 0)
                                {
                                    @String.Join(", ", programTypes)
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
